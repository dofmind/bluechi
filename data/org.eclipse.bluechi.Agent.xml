<!DOCTYPE node PUBLIC "-//freedesktop//DTD D-BUS Object Introspection 1.0//EN" "http://www.freedesktop.org/standards/dbus/1.0/introspect.dtd">
<!-- SPDX-License-Identifier: LGPL-2.1-or-later -->
<node>

  <!-- 
    org.eclipse.bluechi.Agent:
    @short_description: Public interface of BlueChi on the managed node providing methods and signals for the respective node.

    This interface is used to create proxy services resolving dependencies on services of other managed nodes.
  -->
  <interface name="org.eclipse.bluechi.Agent">

    <!-- 
      CreateProxy:
      @local_service_name: The service name which requests the external dependency
      @node: The requested node to provide the service
      @unit: The external unit requested from the local service

      BlueChi internal usage only.
      CreateProxy() creates a new proxy service. It is part in the chain of resolving dependencies on services running on other managed nodes.
    -->
    <method name="CreateProxy">
      <arg name="local_service_name" type="s" direction="in" />
      <arg name="node" type="s" direction="in" />
      <arg name="unit" type="s" direction="in" />
    </method>

    <!-- 
      RemoveProxy:
      @local_service_name: The service name which requests the external dependency
      @node: The requested node to provide the service
      @unit: The external unit requested from the local service

      BlueChi internal usage only.
      RemoveProxy() removes a new proxy service. It is part in the chain of resolving dependencies on services running on other managed nodes.
    -->
    <method name="RemoveProxy">
      <arg name="local_service_name" type="s" direction="in" />
      <arg name="node" type="s" direction="in" />
      <arg name="unit" type="s" direction="in" />
    </method>

    <!--
      SetControllerAddress:
      @controller_address: SD Bus address used by bluechi agent to connect to bluechi controller
      @reconnect: Specify if bluechi agent reconnects to new bluechi controller right now

      SetControllerAddress() changes SD Bus address used by bluechi agent to connect to bluechi controller.
    -->
    <method name="SetControllerAddress">
      <arg name="controller_address" type="s" direction="in" />
      <arg name="reconnect" type="b" direction="in" />
    </method>

    <!--
      SetControllerHost:
      @controller_host: The host used by bluechi agent to connect to bluechi controller
      @reconnect: Specify if bluechi agent reconnects to new bluechi controller right now

      SetControllerHost() changes the host used by bluechi agent to connect to bluechi controller.
    -->
    <method name="SetControllerHost">
      <arg name="controller_host" type="s" direction="in" />
      <arg name="reconnect" type="b" direction="in" />
    </method>

    <!--
      SetControllerPort:
      @controller_port: The port the bluechi controller listens on to establish connections with the bluechi agents
      @reconnect: Specify if bluechi agent reconnects to new bluechi controller right now

      SetControllerPort() changes the port on which bluechi controller is listening for connection request and the bluechi agent is connecting to.
    -->
    <method name="SetControllerPort">
      <arg name="controller_port" type="s" direction="in" />
      <arg name="reconnect" type="b" direction="in" />
    </method>


    <!-- 
      Status:

      The connection status of the agent with the BlueChi controller.
      On any change, a signal is emitted on the org.freedesktop.DBus.Properties interface. 
    -->
    <property name="Status" type="s" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="true" />
    </property>

    <!--
      LogLevel:

      The LogLevel of the agent node that is currently used. Its value is one of:
        INFO, DEBUG, ERROR and WARN 
    -->
    <property name="LogLevel" type="s" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="false" />
    </property>

    <!--
      LogTarget:

      The LogTarget of the agent node that is currently used. Its value is one of:
        stderr, stderr-full, journald
    -->
    <property name="LogTarget" type="s" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const" />
    </property>

    <!-- 
      DisconnectTimestamp:

      A timestamp indicating when the agent lost connection to the BlueChi controller.
      If the connection is active (agent is online), this value is 0.
    -->
    <property name="DisconnectTimestamp" type="t" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="false" />
    </property>

  </interface>
</node>
